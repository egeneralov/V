#!/bin/bash

# nginx config
## http config
function ng_http_html { mkdir -p /sites/$1/public; cat <<< " server { listen 80; root /sites/$1/public; index index.php index.html index.htm; server_name $1;} " > /etc/nginx/sites-enabled/$1;}
function ng_http_php_5 { mkdir -p /sites/$1/public; cat <<< " server { listen 80; root /sites/$1/public; index index.php index.html index.htm; server_name $1; client_max_body_size 100m; location / { index  index.php index.html; rewrite  ^(.*)\$ /index.php?\$args last; } location ~ \.php\$ { try_files \$uri = 404; fastcgi_pass unix:/var/run/php5-fpm.sock; fastcgi_index index.php; fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name; include fastcgi_params; } } " > /etc/nginx/sites-enabled/$1; }
function ng_http_php_7 { mkdir -p /sites/$1/public; cat <<< " server { listen 80; root /sites/$1/public; index index.php index.html index.htm; server_name $1; client_max_body_size 100m; location / { index  index.php index.html; rewrite  ^(.*)\$ /index.php?\$args last; } location ~ \.php\$ { try_files \$uri = 404; fastcgi_pass unix:/var/run/php/php7.1-fpm.sock; fastcgi_index index.php; fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name; include fastcgi_params; } } " > /etc/nginx/sites-enabled/$1; }
function ng_http_proxy { mkdir -p /sites/$1/public; cat <<< " server { listen 80; root /sites/$1/public; index index.html; server_name $1; location / { proxy_pass $2; proxy_set_header Host \$server_name; proxy_set_header X-Real-IP \$remote_addr; proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for; } } " > /etc/nginx/sites-enabled/$1; }
## https config
function ng_https_html { mkdir -p /sites/$1/public; cat <<< " server { listen 443 ssl; ssl_certificate /etc/nginx/ssl/$1.crt; ssl_certificate_key /etc/nginx/ssl/$1.key; root /sites/$1/public; index index.php index.html index.htm; server_name $1; } " > /etc/nginx/sites-enabled/$1; }
function ng_https_php_5 { mkdir -p /sites/$1/public; cat <<< " server { server_name $1; listen 443 ssl; ssl_certificate /etc/nginx/ssl/$1.crt; ssl_certificate_key /etc/nginx/ssl/$1.key; root /sites/$1/public; index index.php index.html index.htm; client_max_body_size 100m; location / { index  index.php index.html; rewrite  ^(.*)\$ /index.php?\$args last; } location ~ \\.php\$ { try_files \$uri = 404; fastcgi_pass unix:/var/run/php5-fpm.sock; fastcgi_index index.php; fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name; include fastcgi_params; } } " > /etc/nginx/sites-enabled/$1; }
function ng_https_php_7 { mkdir -p /sites/$1/public; cat <<< " server { server_name $1; listen 443 ssl; ssl_certificate /etc/nginx/ssl/$1.crt; ssl_certificate_key /etc/nginx/ssl/$1.key; root /sites/$1/public; index index.php index.html index.htm; client_max_body_size 100m; location / { index  index.php index.html; rewrite  ^(.*)\$ /index.php?\$args last; } location ~ \\.php\$ { try_files \$uri = 404; fastcgi_pass unix:/var/run/php/php7.1-fpm.sock; fastcgi_index index.php; fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name; include fastcgi_params; } } " > /etc/nginx/sites-enabled/$1; }
function ng_https_proxy { mkdir -p /sites/$1/public; cat <<< " server { listen 443 ssl; ssl_certificate /etc/nginx/ssl/$1.crt; ssl_certificate_key /etc/nginx/ssl/$1.key; index index.html; server_name $1; location / { proxy_pass $2; proxy_set_header Host \$server_name; proxy_set_header X-Real-IP \$remote_addr; proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for; } } " > /etc/nginx/sites-enabled/$1; }
## rewrite
function ng_rewrite_www { cat <<< " server { server_name www.$1; listen 80; return 301 http://$1\$request_uri; } " >> /etc/nginx/sites-enabled/$1; }
function ng_rewrite_https { cat <<< " server { server_name $1; listen 80; return 301 https://$1\$request_uri? permanent; } " >> /etc/nginx/sites-enabled/$1; }



function add_site {
	if [ -z "$1" ]; then error "Specify domain name."; fi;
	read -p "`question 'Add site $1?: '`" add_site;
	
}

